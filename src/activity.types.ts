// Any type of activity that can come in through the app. Anything that changes colors or accessories should be here
export enum LumiaActivityCommandTypes {
    TEST = 'test', // value: { type, config }
    ALERT = 'alert', // value: { alert: AlertTypes, variation?: string }
    CHAT = 'chat', // value: { site: 'twitch' | 'youtube' | 'facebook', message: string }
    DIRECT = 'direct',
    MIDI = 'midi', // value: { port: number, type: MIDI_COMMANDS, channel: number, note: MIDI_NOTES_TYPES, velocity: number }
    OSC = 'osc',
    MQTT = 'mqtt',
    ARTNET = 'artnet', // value: { presetName: string; device?: string; univers: string | number, values: IArtnetChannelValues[] }
    LIGHTS_OFF = 'lights-off',
    RGB_COLOR = 'rgb-color', // value: { color: [num, num, num], brightness?: number, transition?: number, duration?: number }
    HEX_COLOR = 'hex-color',
    CHAT_COMMAND = 'chat-command',
    CHAT_MATCH = 'chat-match',
    TWITCH_POINTS = 'twitch-points',
    TWITCH_POINTS_OUTPUT = 'twitch-points-output',
    TWITCH_EXTENSION = 'twitch-extension',
    TROVO_SPELLS = 'trovo-spells',
    STUDIO_SCENE = 'studio-scene',
    STUDIO_ANIMATION = 'studio-animation',
    STUDIO_THEME = 'studio-theme',
    SET_FUZE = 'set-fuze',
    START_FUZE = 'start-fuze',
    STOP_FUZE = 'stop-fuze',
    TOGGLE_FUZE = 'toggle-fuze',
    TO_DEFAULT = 'to-default',
    SET_LUMIA = 'set-lumia',
    START_LUMIA = 'start-lumia',
    STOP_LUMIA = 'stop-lumia',
    TOGGLE_STREAMMODE = 'toggle-stream-mode',
    START_STREAMMODE = 'start-stream-mode',
    STOP_STREAMMODE = 'stop-stream-mode',
    CLEAR_QUEUE = 'clear-queue',
    CHATBOT_MESSAGE = 'chatbot-message',
    TTS = 'tts',
    COMMUNITY_TEST = 'community-test',
    UPDATE_VARIABLE_VALUE = 'update-variable-value',
    GET_VARIABLE_VALUE = 'get-variable-value',
    SPOTIFY = 'send-spotify-command',
    VLC = 'send-vlc-command',
    TWITTER = 'send-twitter-command',

    // Games Glow Command Types
    GAMESGLOW_ALERT = 'gamesglow-alert',
    GAMESGLOW_COMMAND = 'gamesglow-command',
    GAMESGLOW_VARIABLE = 'gamesglow-variable',
    GAMESGLOW_VIRTUALLIGHT = 'gamesglow-virtuallight',
}

// Anything that comes through in an external way
export enum LumiaExternalActivityCommandTypes {
    ALERT = 'alert', // value: { alert: AlertTypes, variation?: string }
    MIDI = 'midi', // value: { port: number, type: MIDI_COMMANDS, channel: number, note: MIDI_NOTES_TYPES, velocity: number }
    OSC = 'osc',
    ARTNET = 'artnet', // value: { presetName: string; device?: string; univers: string | number, values: IArtnetChannelValues[] }
    RGB_COLOR = 'rgb-color', // value: { color: [num, num, num], brightness?: number, transition?: number, duration?: number }
    HEX_COLOR = 'hex-color',
    CHAT_COMMAND = 'chat-command',
    TWITCH_POINTS = 'twitch-points',
    TWITCH_EXTENSION = 'twitch-extension',
    TROVO_SPELLS = 'trovo-spells',
    STUDIO_SCENE = 'studio-scene',
    STUDIO_ANIMATION = 'studio-animation',
    STUDIO_THEME = 'studio-theme',
    CHATBOT_MESSAGE = 'chatbot-messsage',
    TTS = 'tts',
}

export enum LumiaAlertValues {
    TWITCH_STREAM_LIVE = 'twitch-streamLive',
    TWITCH_STREAM_OFFLINE = 'twitch-streamOffline',
    TWITCH_FOLLOWER = 'twitch-follower',
    TWITCH_SUBSCRIBER = 'twitch-subscriber',
    TWITCH_HOST = 'twitch-host',
    TWITCH_RAID = 'twitch-raid',
    TWITCH_BITS = 'twitch-bits',
    TWITCH_REDEMPTION = 'twitch-redemption',
    TWITCH_HYPETRAIN_STARTED = 'twitch-hypetrainStarted',
    TWITCH_HYPETRAIN_PROGRESSED = 'twitch-hypetrainProgressed',
    TWITCH_HYPETRAIN_LEVEL_PROGRESSED = 'twitch-hypetrainLevelProgressed',
    TWITCH_HYPETRAIN_ENDED = 'twitch-hypetrainEnded',
    TWITCH_POLL_STARTED = 'twitch-pollStarted',
    TWITCH_POLL_PROGRESSED = 'twitch-pollProgressed',
    TWITCH_POLL_ENDED = 'twitch-pollEnded',
    TWITCH_PREDICTION_STARTED = 'twitch-predictionStarted',
    TWITCH_PREDICTION_PROGRESSED = 'twitch-predictionProgressed',
    TWITCH_PREDICTION_LOCKED = 'twitch-predictionLocked',
    TWITCH_PREDICTION_ENDED = 'twitch-predictionEnded',
    TWITCH_GOAL_STARTED = 'twitch-goalStarted',
    TWITCH_GOAL_PROGRESSED = 'twitch-goalProgressed',
    TWITCH_GOAL_ENDED = 'twitch-goalEnded',
    TWITCH_CATEGORY = 'twitch-categoryChanged',
    TWITCH_CLIP = 'twitch-clip',
    YOUTUBE_MEMBER = 'youtube-member',
    YOUTUBE_SUBSCRIBER = 'youtube-subscriber',
    YOUTUBE_SUPERCHAT = 'youtube-superchat',
    YOUTUBE_SUPERSTICKER = 'youtube-supersticker',
    FACEBOOK_FOLLOWER = 'facebook-follower',
    FACEBOOK_REACTION = 'facebook-reaction',
    FACEBOOK_STAR = 'facebook-star',
    FACEBOOK_SUPPORT = 'facebook-support',
    FACEBOOK_SHARE = 'facebook-share',
    FACEBOOK_FAN = 'facebook-fan',
    GLIMESH_SUBSCRIBER = 'glimesh-subscriber',
    GLIMESH_FOLLOWER = 'glimesh-follower',
    TROVO_SUBSCRIBER = 'trovo-subscriber', // potential for Trovo, needs testing in POC
    TROVO_FOLLOWER = 'trovo-follower', // potential for Trovo, needs testing in POC
    TROVO_SPELL = 'trovo-spell', // potential for Trovo, needs testing in POC
    TIKTOK_FOLLOWER = 'tiktok-follower',
    TIKTOK_LIKE = 'tiktok-like',
    TIKTOK_GIFT = 'tiktok-gift',
    TIKTOK_SHARE = 'tiktok-share',
    STREAMLABS_DONATION = 'streamlabs-donation',
    STREAMLABS_CHARITY = 'streamlabs-charity',
    STREAMLABS_MERCH = 'streamlabs-merch',
    STREAMLABS_REDEMPTION = 'streamlabs-redemption',
    STREAMLABS_PRIMEGIFT = 'streamlabs-primegift',
    STREAMELEMENTS_DONATION = 'streamelements-donation',
    STREAMELEMENTS_MERCH = 'streamelements-merch',
    STREAMELEMENTS_REDEMPTION = 'streamelements-redemption',
    EXTRALIFE_DONATION = 'extralife-donation',
    DONORDRIVE_DONATION = 'donordrive-donation',
    TILTIFY_DONATION = 'tiltify-campaignDonation',
    // PAYPAL_PAYMENT_COMPLETE = 'paypal-paymentComplete',
    // PAYPAL_PAYMENT_DENIED = 'paypal-paymentDenied',
    TIPEEESTREAM_DONATION = 'tipeeestream-donation',
    TREATSTREAM_TREAT = 'treatstream-treat',
    PATREON_PLEDGE = 'patreon-pledge',
    OBS_SWITCH_PROFILE = 'obs-switchProfile',
    OBS_SWITCH_SCENE = 'obs-switchScene',
    OBS_SCENE_ITEM_VISIBILITY = 'obs-sceneItemVisibility',
    OBS_SWITCH_TRANSITION = 'obs-switch-transition',
    OBS_TRANSITION_BEGIN = 'obs-transitionBegin',
    OBS_TRANSITION_END = 'obs-transitionEnd',
    OBS_STREAM_STARTING = 'obs-streamStarting',
    OBS_STREAM_STOPPING = 'obs-streamStopping',
    SLOBS_SWITCH_SCENE_COLLECTION = 'slobs-switchSceneCollection',
    SLOBS_SWITCH_SCENE = 'slobs-switchScene',
    SLOBS_SCENE_ITEM_VISIBILITY = 'slobs-sceneItemVisibility',
    SPOTIFY_SWITCH_SONG = 'spotify-switchSong',
    SPOTIFY_SONG_PLAYED = 'spotify-songPlayed',
    SPOTIFY_SONG_PAUSED = 'spotify-songPaused',
    VLC_SWITCH_SONG = 'vlc-switchSong',
    VLC_SONG_PLAYED = 'vlc-songPlayed',
    VLC_SONG_PAUSED = 'vlc-songPaused',
    PULSE_HEARTRATE = 'pulse-heartrate',
    PULSE_CALORIES = 'pulse-calories',
    TWITTER_FOLLOWER = 'twitter-follower',
    TWITTER_LIKE = 'twitter-like',
    TWITTER_RETWEET = 'twitter-retweet',
    WOOCOMMERCE_ORDER = 'woocommerce-order',
    KOFI_DONATION = 'kofi-donation',
    KOFI_SUBSCRIPTION = 'kofi-subscription',
    KOFI_COMMISSION = 'kofi-commission',
    KOFI_SHOPORDER = 'kofi-shopOrder',
}

export const LumiaAlertFriendlyValues = {
    TWITCH_STREAM_LIVE: 'Twitch StreamLive',
    TWITCH_STREAM_OFFLINE: 'Twitch StreamOffline',
    TWITCH_FOLLOWER: 'Twitch Follower',
    TWITCH_SUBSCRIBER: 'Twitch Subscriber',
    TWITCH_HOST: 'Twitch Host',
    TWITCH_RAID: 'Twitch Raid',
    TWITCH_BITS: 'Twitch Bits',
    TWITCH_REDEMPTION: 'Twitch Redemption',
    TWITCH_HYPETRAIN_STARTED: 'Twitch HypetrainStarted',
    TWITCH_HYPETRAIN_PROGRESSED: 'Twitch HypetrainProgressed',
    TWITCH_HYPETRAIN_LEVEL_PROGRESSED: 'Twitch HypetrainLevelProgressed',
    TWITCH_HYPETRAIN_ENDED: 'Twitch HypetrainEnded',
    TWITCH_POLL_STARTED: 'Twitch PollStarted',
    TWITCH_POLL_PROGRESSED: 'Twitch PollProgressed',
    TWITCH_POLL_ENDED: 'Twitch PollEnded',
    TWITCH_PREDICTION_STARTED: 'Twitch PredictionStarted',
    TWITCH_PREDICTION_PROGRESSED: 'Twitch PredictionProgressed',
    TWITCH_PREDICTION_LOCKED: 'Twitch PredictionLocked',
    TWITCH_PREDICTION_ENDED: 'Twitch PredictionEnded',
    TWITCH_GOAL_STARTED: 'Twitch GoalStarted',
    TWITCH_GOAL_PROGRESSED: 'Twitch GoalProgressed',
    TWITCH_GOAL_ENDED: 'Twitch GoalEnded',
    TWITCH_CATEGORY: 'Twitch CategoryChanged',
    TWITCH_CLIP: 'Twitch Clip',
    YOUTUBE_MEMBER: 'Youtube Member',
    YOUTUBE_SUBSCRIBER: 'Youtube Subscriber',
    YOUTUBE_SUPERCHAT: 'Youtube Superchat',
    YOUTUBE_SUPERSTICKER: 'Youtube Supersticker',
    FACEBOOK_FOLLOWER: 'Facebook Follower',
    FACEBOOK_REACTION: 'Facebook Reaction',
    FACEBOOK_STAR: 'Facebook Star',
    FACEBOOK_SUPPORT: 'Facebook Support',
    FACEBOOK_SHARE: 'Facebook Share',
    FACEBOOK_FAN: 'Facebook Fan',
    GLIMESH_SUBSCRIBER: 'Glimesh Subscriber',
    GLIMESH_FOLLOWER: 'Glimesh Follower',
    TROVO_SUBSCRIBER: 'Trovo Subscriber',
    TROVO_FOLLOWER: 'Trovo Follower',
    TROVO_SPELL: 'Trovo Spell',
    TIKTOK_FOLLOWER: 'Tiktok Follower',
    TIKTOK_LIKE: 'Tiktok Like',
    TIKTOK_GIFT: 'Tiktok Gift',
    TIKTOK_SHARE: 'Tiktok Share',
    STREAMLABS_DONATION: 'Streamlabs Donation',
    STREAMLABS_CHARITY: 'Streamlabs Charity',
    STREAMLABS_MERCH: 'Streamlabs Merch',
    STREAMLABS_REDEMPTION: 'Streamlabs Redemption',
    STREAMLABS_PRIMEGIFT: 'Streamlabs Primegift',
    STREAMELEMENTS_DONATION: 'Streamelements Donation',
    STREAMELEMENTS_MERCH: 'Streamelements Merch',
    STREAMELEMENTS_REDEMPTION: 'Streamelements Redemption',
    EXTRALIFE_DONATION: 'Extralife Donation',
    DONORDRIVE_DONATION: 'Donordrive Donation',
    TILTIFY_DONATION: 'Tiltify CampaignDonation',
    // PAYPAL_PAYMENT_COMPLETE: 'Paypal PaymentComplete',
    // PAYPAL_PAYMENT_DENIED: 'Paypal PaymentDenied',
    TIPEEESTREAM_DONATION: 'Tipeeestream Donation',
    TREATSTREAM_TREAT: 'Treatstream Treat',
    PATREON_PLEDGE: 'Patreon Pledge',
    OBS_SWITCH_PROFILE: 'Obs SwitchProfile',
    OBS_SWITCH_SCENE: 'Obs SwitchScene',
    OBS_SCENE_ITEM_VISIBILITY: 'Obs SceneItemVisibility',
    OBS_SWITCH_TRANSITION: 'obs-Switch Transition',
    OBS_TRANSITION_BEGIN: 'Obs TransitionBegin',
    OBS_TRANSITION_END: 'Obs TransitionEnd',
    OBS_STREAM_STARTING: 'Obs StreamStarting',
    OBS_STREAM_STOPPING: 'Obs StreamStopping',
    SLOBS_SWITCH_SCENE_COLLECTION: 'Slobs SwitchSceneCollection',
    SLOBS_SWITCH_SCENE: 'Slobs SwitchScene',
    SLOBS_SCENE_ITEM_VISIBILITY: 'Slobs SceneItemVisibility',
    SPOTIFY_SWITCH_SONG: 'Spotify SwitchSong',
    SPOTIFY_SONG_PLAYED: 'Spotify SongPlayed',
    SPOTIFY_SONG_PAUSED: 'Spotify SongPaused',
    VLC_SWITCH_SONG: 'Vlc SwitchSong',
    VLC_SONG_PLAYED: 'Vlc SongPlayed',
    VLC_SONG_PAUSED: 'Vlc SongPaused',
    PULSE_HEARTRATE: 'Pulse Heartrate',
    PULSE_CALORIES: 'Pulse Calories',
    TWITTER_FOLLOWER: 'Twitter Follower',
    TWITTER_LIKE: 'Twitter Like',
    TWITTER_RETWEET: 'Twitter Retweet',
    WOOCOMMERCE_ORDER: 'Woocommerce Order',
    KOFI_DONATION: 'Kofi Donation',
    KOFI_SUBSCRIPTION: 'Kofi Subscription',
    KOFI_COMMISSION: 'Kofi Commission',
    KOFI_SHOPORDER: 'Kofi Shoporder',
};

// Where did the Activity Originate from: Chat, alerts, shortcut, api, etc.
export enum LumiaActivityOriginTypes {
    SYSTEM = 'system', // Settings, Shortcut, or API
    ALEXA = 'alexa',
    ALERT = 'alert',
    CHAT = 'chat',
    TWITCH_POINTS = 'twitch-points',
    TWITCH_EXTENSION = 'twitch-extension',
    TROVO_SPELLS = 'trovo-spells',
    API = 'api',
    LUMIASTREAMLINK = 'lumiastreamlink',
    STREAMDECK = 'streamdeck',
    TOUCHPORTAL = 'touchportal',
    GAMESGLOW = 'gamesglow',
}

export enum LumiaActivityApiValueType {
    NO_VALUE,
    CUSTOM_VALUE,
    SET_VALUE,
}

// Activities that do not need a value
export const LumiaActivityNoValueTypes = [
    LumiaActivityCommandTypes.CLEAR_QUEUE,
    LumiaActivityCommandTypes.START_FUZE,
    LumiaActivityCommandTypes.START_LUMIA,
    LumiaActivityCommandTypes.START_STREAMMODE,
    LumiaActivityCommandTypes.STOP_FUZE,
    LumiaActivityCommandTypes.STOP_LUMIA,
    LumiaActivityCommandTypes.STOP_STREAMMODE,
    LumiaActivityCommandTypes.TOGGLE_FUZE,
    LumiaActivityCommandTypes.TOGGLE_STREAMMODE,
];

// We'll want to use test types when we're sending a direct activity that doesn't currently have a link
export enum LumiaActivityTestType {
    REACTION,
    BUILDUPS,
    ANIMATION,
    THEME,
    SCENE,
}
